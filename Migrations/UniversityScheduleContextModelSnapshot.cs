// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniversitySchedule.Models;

#nullable disable

namespace UniversitySchedule.Migrations
{
    [DbContext(typeof(UniversityScheduleContext))]
    partial class UniversityScheduleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("InstructorCourse", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("course_id");

                    b.Property<int>("InstructorId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("instructor_id");

                    b.HasKey("CourseId", "InstructorId");

                    b.HasIndex("InstructorId");

                    b.ToTable("InstructorCourse", (string)null);
                });

            modelBuilder.Entity("UniversitySchedule.Models.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("CourseId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("course_id");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("department_id");

                    b.Property<int>("InstructorId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("instructor_id");

                    b.Property<int>("MeetingTimeId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("meeting_time_id");

                    b.Property<int>("RoomId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("room_id");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("schedule_id");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("InstructorId");

                    b.HasIndex("MeetingTimeId");

                    b.HasIndex("RoomId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Class", (string)null);
                });

            modelBuilder.Entity("UniversitySchedule.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("Credit")
                        .HasColumnType("INTEGER")
                        .HasColumnName("credit");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("department_id");

                    b.Property<int>("MaxStudent")
                        .HasColumnType("INTEGER")
                        .HasColumnName("max_student");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<int>("NumberClass")
                        .HasColumnType("INTEGER")
                        .HasColumnName("number_class");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Course", (string)null);
                });

            modelBuilder.Entity("UniversitySchedule.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("UniversitySchedule.Models.Information", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("DayOfBirth")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("day_of_birth");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("phone");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "IX_Information_email")
                        .IsUnique();

                    b.HasIndex(new[] { "Phone" }, "IX_Information_phone")
                        .IsUnique();

                    b.ToTable("Information", (string)null);
                });

            modelBuilder.Entity("UniversitySchedule.Models.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("department_id");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Instructor", (string)null);
                });

            modelBuilder.Entity("UniversitySchedule.Models.MeetingTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("Credit")
                        .HasColumnType("INTEGER")
                        .HasColumnName("credit");

                    b.Property<int>("Day")
                        .HasColumnType("INTEGER")
                        .HasColumnName("day");

                    b.Property<string>("EndTime")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("end_time");

                    b.Property<string>("StartTime")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("start_time");

                    b.HasKey("Id");

                    b.ToTable("MeetingTime", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 11,
                            Credit = 2,
                            Day = 1,
                            EndTime = "08:15",
                            StartTime = "06:45"
                        },
                        new
                        {
                            Id = 12,
                            Credit = 2,
                            Day = 1,
                            EndTime = "10:05",
                            StartTime = "08:25"
                        },
                        new
                        {
                            Id = 13,
                            Credit = 2,
                            Day = 1,
                            EndTime = "11:45",
                            StartTime = "10:15"
                        },
                        new
                        {
                            Id = 14,
                            Credit = 2,
                            Day = 1,
                            EndTime = "14:00",
                            StartTime = "12:30"
                        },
                        new
                        {
                            Id = 15,
                            Credit = 2,
                            Day = 1,
                            EndTime = "15:50",
                            StartTime = "14:10"
                        },
                        new
                        {
                            Id = 16,
                            Credit = 2,
                            Day = 1,
                            EndTime = "17:30",
                            StartTime = "16:00"
                        },
                        new
                        {
                            Id = 17,
                            Credit = 3,
                            Day = 1,
                            EndTime = "09:10",
                            StartTime = "06:45"
                        },
                        new
                        {
                            Id = 18,
                            Credit = 3,
                            Day = 1,
                            EndTime = "11:45",
                            StartTime = "09:20"
                        },
                        new
                        {
                            Id = 19,
                            Credit = 3,
                            Day = 1,
                            EndTime = "14:55",
                            StartTime = "12:30"
                        },
                        new
                        {
                            Id = 20,
                            Credit = 3,
                            Day = 1,
                            EndTime = "17:30",
                            StartTime = "15:05"
                        },
                        new
                        {
                            Id = 21,
                            Credit = 2,
                            Day = 2,
                            EndTime = "08:15",
                            StartTime = "06:45"
                        },
                        new
                        {
                            Id = 22,
                            Credit = 2,
                            Day = 2,
                            EndTime = "10:05",
                            StartTime = "08:25"
                        },
                        new
                        {
                            Id = 23,
                            Credit = 2,
                            Day = 2,
                            EndTime = "11:45",
                            StartTime = "10:15"
                        },
                        new
                        {
                            Id = 24,
                            Credit = 2,
                            Day = 2,
                            EndTime = "14:00",
                            StartTime = "12:30"
                        },
                        new
                        {
                            Id = 25,
                            Credit = 2,
                            Day = 2,
                            EndTime = "15:50",
                            StartTime = "14:10"
                        },
                        new
                        {
                            Id = 26,
                            Credit = 2,
                            Day = 2,
                            EndTime = "17:30",
                            StartTime = "16:00"
                        },
                        new
                        {
                            Id = 27,
                            Credit = 3,
                            Day = 2,
                            EndTime = "09:10",
                            StartTime = "06:45"
                        },
                        new
                        {
                            Id = 28,
                            Credit = 3,
                            Day = 2,
                            EndTime = "11:45",
                            StartTime = "09:20"
                        },
                        new
                        {
                            Id = 29,
                            Credit = 3,
                            Day = 2,
                            EndTime = "14:55",
                            StartTime = "12:30"
                        },
                        new
                        {
                            Id = 30,
                            Credit = 3,
                            Day = 2,
                            EndTime = "17:30",
                            StartTime = "15:05"
                        },
                        new
                        {
                            Id = 31,
                            Credit = 2,
                            Day = 3,
                            EndTime = "08:15",
                            StartTime = "06:45"
                        },
                        new
                        {
                            Id = 32,
                            Credit = 2,
                            Day = 3,
                            EndTime = "10:05",
                            StartTime = "08:25"
                        },
                        new
                        {
                            Id = 33,
                            Credit = 2,
                            Day = 3,
                            EndTime = "11:45",
                            StartTime = "10:15"
                        },
                        new
                        {
                            Id = 34,
                            Credit = 2,
                            Day = 3,
                            EndTime = "14:00",
                            StartTime = "12:30"
                        },
                        new
                        {
                            Id = 35,
                            Credit = 2,
                            Day = 3,
                            EndTime = "15:50",
                            StartTime = "14:10"
                        },
                        new
                        {
                            Id = 36,
                            Credit = 2,
                            Day = 3,
                            EndTime = "17:30",
                            StartTime = "16:00"
                        },
                        new
                        {
                            Id = 37,
                            Credit = 3,
                            Day = 3,
                            EndTime = "09:10",
                            StartTime = "06:45"
                        },
                        new
                        {
                            Id = 38,
                            Credit = 3,
                            Day = 3,
                            EndTime = "11:45",
                            StartTime = "09:20"
                        },
                        new
                        {
                            Id = 39,
                            Credit = 3,
                            Day = 3,
                            EndTime = "14:55",
                            StartTime = "12:30"
                        },
                        new
                        {
                            Id = 40,
                            Credit = 3,
                            Day = 3,
                            EndTime = "17:30",
                            StartTime = "15:05"
                        },
                        new
                        {
                            Id = 41,
                            Credit = 2,
                            Day = 4,
                            EndTime = "08:15",
                            StartTime = "06:45"
                        },
                        new
                        {
                            Id = 42,
                            Credit = 2,
                            Day = 4,
                            EndTime = "10:05",
                            StartTime = "08:25"
                        },
                        new
                        {
                            Id = 43,
                            Credit = 2,
                            Day = 4,
                            EndTime = "11:45",
                            StartTime = "10:15"
                        },
                        new
                        {
                            Id = 44,
                            Credit = 2,
                            Day = 4,
                            EndTime = "14:00",
                            StartTime = "12:30"
                        },
                        new
                        {
                            Id = 45,
                            Credit = 2,
                            Day = 4,
                            EndTime = "15:50",
                            StartTime = "14:10"
                        },
                        new
                        {
                            Id = 46,
                            Credit = 2,
                            Day = 4,
                            EndTime = "17:30",
                            StartTime = "16:00"
                        },
                        new
                        {
                            Id = 47,
                            Credit = 3,
                            Day = 4,
                            EndTime = "09:10",
                            StartTime = "06:45"
                        },
                        new
                        {
                            Id = 48,
                            Credit = 3,
                            Day = 4,
                            EndTime = "11:45",
                            StartTime = "09:20"
                        },
                        new
                        {
                            Id = 49,
                            Credit = 3,
                            Day = 4,
                            EndTime = "14:55",
                            StartTime = "12:30"
                        },
                        new
                        {
                            Id = 50,
                            Credit = 3,
                            Day = 4,
                            EndTime = "17:30",
                            StartTime = "15:05"
                        },
                        new
                        {
                            Id = 51,
                            Credit = 2,
                            Day = 5,
                            EndTime = "08:15",
                            StartTime = "06:45"
                        },
                        new
                        {
                            Id = 52,
                            Credit = 2,
                            Day = 5,
                            EndTime = "10:05",
                            StartTime = "08:25"
                        },
                        new
                        {
                            Id = 53,
                            Credit = 2,
                            Day = 5,
                            EndTime = "11:45",
                            StartTime = "10:15"
                        },
                        new
                        {
                            Id = 54,
                            Credit = 2,
                            Day = 5,
                            EndTime = "14:00",
                            StartTime = "12:30"
                        },
                        new
                        {
                            Id = 55,
                            Credit = 2,
                            Day = 5,
                            EndTime = "15:50",
                            StartTime = "14:10"
                        },
                        new
                        {
                            Id = 56,
                            Credit = 2,
                            Day = 5,
                            EndTime = "17:30",
                            StartTime = "16:00"
                        },
                        new
                        {
                            Id = 57,
                            Credit = 3,
                            Day = 5,
                            EndTime = "09:10",
                            StartTime = "06:45"
                        },
                        new
                        {
                            Id = 58,
                            Credit = 3,
                            Day = 5,
                            EndTime = "11:45",
                            StartTime = "09:20"
                        },
                        new
                        {
                            Id = 59,
                            Credit = 3,
                            Day = 5,
                            EndTime = "14:55",
                            StartTime = "12:30"
                        },
                        new
                        {
                            Id = 60,
                            Credit = 3,
                            Day = 5,
                            EndTime = "17:30",
                            StartTime = "15:05"
                        });
                });

            modelBuilder.Entity("UniversitySchedule.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("Capacity")
                        .HasColumnType("INTEGER")
                        .HasColumnName("capacity");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Room", (string)null);
                });

            modelBuilder.Entity("UniversitySchedule.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER")
                        .HasColumnName("active");

                    b.HasKey("Id");

                    b.ToTable("Schedule", (string)null);
                });

            modelBuilder.Entity("UniversitySchedule.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("password");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER")
                        .HasColumnName("role");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Username" }, "IX_User_username")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("InstructorCourse", b =>
                {
                    b.HasOne("UniversitySchedule.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversitySchedule.Models.Instructor", null)
                        .WithMany()
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UniversitySchedule.Models.Class", b =>
                {
                    b.HasOne("UniversitySchedule.Models.Course", "Course")
                        .WithMany("Classes")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversitySchedule.Models.Department", "Department")
                        .WithMany("Classes")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversitySchedule.Models.Instructor", "Instructor")
                        .WithMany("Classes")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversitySchedule.Models.MeetingTime", "MeetingTime")
                        .WithMany("Classes")
                        .HasForeignKey("MeetingTimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversitySchedule.Models.Room", "Room")
                        .WithMany("Classes")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversitySchedule.Models.Schedule", "Schedule")
                        .WithMany("Classes")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Department");

                    b.Navigation("Instructor");

                    b.Navigation("MeetingTime");

                    b.Navigation("Room");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("UniversitySchedule.Models.Course", b =>
                {
                    b.HasOne("UniversitySchedule.Models.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("UniversitySchedule.Models.Information", b =>
                {
                    b.HasOne("UniversitySchedule.Models.User", "User")
                        .WithOne("Information")
                        .HasForeignKey("UniversitySchedule.Models.Information", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UniversitySchedule.Models.Instructor", b =>
                {
                    b.HasOne("UniversitySchedule.Models.Department", "Department")
                        .WithMany("Instructors")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UniversitySchedule.Models.User", "User")
                        .WithOne("Instructor")
                        .HasForeignKey("UniversitySchedule.Models.Instructor", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UniversitySchedule.Models.Course", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("UniversitySchedule.Models.Department", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Courses");

                    b.Navigation("Instructors");
                });

            modelBuilder.Entity("UniversitySchedule.Models.Instructor", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("UniversitySchedule.Models.MeetingTime", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("UniversitySchedule.Models.Room", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("UniversitySchedule.Models.Schedule", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("UniversitySchedule.Models.User", b =>
                {
                    b.Navigation("Information")
                        .IsRequired();

                    b.Navigation("Instructor");
                });
#pragma warning restore 612, 618
        }
    }
}
